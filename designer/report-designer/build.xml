<!--===========================================================================
  This is the build file for the pentaho-reporting-engine-classic-ext-kettle project.
  
  This build file will use the build-res/subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See build-res/subfloor.xml for more details
============================================================================-->
<project name="pentaho-report-designer" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">

    <description>
        This build file is used to create the API project
        and works with the build-res/subfloor.xml file.
    </description>

    <property file="${user.home}/.pentaho-reporting-build-settings.properties"
              description="Per user override settings-file for all pentaho-reporting projects."/>

    <!-- Define the default location of the common build file -->
    <property name="common.build.file" value="./build-res/subfloor.xml"
              description="This is the location of the standardized build-res/subfloor.xml file"/>

    <!-- Import the build-res/subfloor.xml file which contains all the default tasks -->
    <import file="${common.build.file}"/>

    <!--=======================================================================
        continuous

        Runs a typical continuous integration build including project dist,
        test, and coverage artifacts
        ====================================================================-->
    <target name="continuous-local" depends="build,publish-local"/>


    <!--=======================================================================
        continuous-testless

        Runs a typical continuous integration build including project dist,
        and coverage artifacts
        ====================================================================-->
    <target name="continuous-local-testless" depends="build-testless,publish-local"/>

  <!--=======================================================================
      continuous-junit

      Runs a typical continuous integration build including project dist,
      and test artifacts
      ====================================================================-->
  <target name="continuous-local-junit" depends="build-testless,test,publish-local" />

  <!--=======================================================================
      continuous-junit

      Runs a typical continuous integration build including project dist,
      and test artifacts
      ====================================================================-->
  <target name="continuous-junit" depends="build,publish" />

  <!-- Until CM-466 is fixed, hot-patch it -->
  <target name="install-ivy" depends="subfloor.install-ivy">
    <ivy:settings url="${ivy.settingsurl}" />
  </target>

    <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN build-res/subfloor.xml.
    -->

    <!-- Override default dist target to do a dist-full instead -->
    <target name="dist" depends="dist-full"/>
    
  <!--=======================================================================
      generate.manifest
      
      Creates a new manifest file if one is not specified, or updates
      an existing manifest file if one is specified.
      ====================================================================-->
  <target name="generate.manifest" depends="init,set-build.id">
    <delete file="${dist.manifest.file}" />
    <touch file="${dist.manifest.file}" />
    <copy file="${manifest.file}" tofile="${dist.manifest.file}" overwrite="true" failonerror="false" />

    <manifest file="${dist.manifest.file}" mode="update">
      <attribute name="Implementation-Title" value="${impl.title}" />
      <attribute name="Implementation-Version" value="${project.revision}" />
      <attribute name="Implementation-Vendor" value="${impl.vendor}" />
      <attribute name="Implementation-ProductID" value="${impl.productID}" />
    </manifest>
  </target>


</project>
