<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho.reporting</groupId>
    <artifactId>pentaho-reporting</artifactId>
    <version>7.1-SNAPSHOT</version>
  </parent>
  
  <artifactId>pentaho-reporting-assemblies</artifactId>
  <packaging>pom</packaging>
  
  <name>Pentaho Reporting Assemblies</name>

  <profiles>
    <profile>
      <id>default</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>winlinux</module>
      </modules>
    </profile>
    <profile>
      <id>mac</id>
      <activation>
        <property>
          <name>mac.jre.path</name>
        </property>
      </activation>
      <modules>
        <module>winlinux</module>
        <module>mac</module>
      </modules>
    </profile>
  </profiles>

  <properties>
    <stage.dir>${project.build.directory}\stage</stage.dir>
    <stage.dir.designer>${stage.dir}\report-designer</stage.dir.designer>
  </properties>

  <dependencies>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-cda</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-external</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-jdbc</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-table</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-kettle</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-mondrian</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-olap4j</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-openerp</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-pmd</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-reflection</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-scriptable</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-datasource-editor-xpath</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-classic-extensions-sampledata</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-classic-extensions-kettle</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-reporting-engine</groupId>
      <artifactId>pentaho-reporting-engine-legacy-functions</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-report-designer</groupId>
      <artifactId>report-designer-ext-legacy-charts</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-report-designer</groupId>
      <artifactId>report-designer-ext-pentaho</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-report-designer</groupId>
      <artifactId>report-designer-ext-wizard</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-report-designer</groupId>
      <artifactId>report-designer-ext-toc</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-osgi-bridge-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-capability-manager</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-service-coordinator</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-osgi-utils-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.framework</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf</groupId>
      <artifactId>org.apache.karaf.main</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.modules</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.boot</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.karaf.jaas</groupId>
      <artifactId>org.apache.karaf.jaas.config</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-karaf-assembly</artifactId>
      <type>zip</type>
      <classifier>prd</classifier>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.swt</groupId>
      <artifactId>swt-linux-x86_64</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse</groupId>
      <artifactId>jface</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.core</groupId>
      <artifactId>commands</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.equinox</groupId>
      <artifactId>common</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derbyclient</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>infobright</groupId>
      <artifactId>infobright-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.firebirdsql.jdbc</groupId>
      <artifactId>jaybird</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>net.sf.jt400</groupId>
      <artifactId>jt400</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>luciddb</groupId>
      <artifactId>LucidDbClient-minimal</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>monetdb</groupId>
      <artifactId>monetdb-jdbc</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.sap</groupId>
      <artifactId>sapdbc</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.xerial</groupId>
      <artifactId>sqlite-jdbc</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-engine</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle5-log4j-plugin</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-big-data-plugin</artifactId>
      <type>zip</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-cassandra-plugin</artifactId>
      <type>zip</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-xml-plugin</artifactId>
      <type>zip</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-json-plugin</artifactId>
      <type>zip</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-dataservice-client-plugin</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>jsonpath</groupId>
      <artifactId>jsonpath</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>oss-licenses</artifactId>
      <type>zip</type>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-discovery</groupId>
      <artifactId>commons-discovery</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-application-launcher</artifactId>
      <scope>runtime</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <executions>
            <execution>
              <id>unpack-oss</id>
              <phase>package</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>pentaho</groupId>
                    <artifactId>oss-licenses</artifactId>
                    <type>zip</type>
                    <overWrite>true</overWrite>
                    <outputDirectory>${stage.dir.designer}</outputDirectory>
                    <includes>PentahoReporting_OSS_Licenses.html</includes>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
            <execution>
              <id>unpack-karaf</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>unpack</goal>
              </goals>
              <configuration>
                <artifactItems>
                  <artifactItem>
                    <groupId>pentaho</groupId>
                    <artifactId>pentaho-karaf-assembly</artifactId>
                    <type>zip</type>
                    <classifier>prd</classifier>
                    <overWrite>true</overWrite>
                    <outputDirectory>${stage.dir}</outputDirectory>
                  </artifactItem>
                </artifactItems>
              </configuration>
            </execution>
            <execution>
              <id>libs</id>
              <phase>package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${stage.dir.designer}/lib</outputDirectory>
                <includeTypes>jar</includeTypes>
                <includeScope>compile</includeScope>
                <excludeArtifactIds>derby,derbyclient,h2,jaybird,jt400,LucidDbClient-minimal,sapdbc,sqlite-jdbc,pdi-dataservice-client-plugin</excludeArtifactIds>
              </configuration>
            </execution>
            <execution>
              <id>drivers</id>
              <phase>package</phase>
              <goals>
                <goal>copy-dependencies</goal>
              </goals>
              <configuration>
                <outputDirectory>${stage.dir.designer}/lib/jdbc</outputDirectory>
                <includeArtifactIds>derby,derbyclient,h2,hsqldb,infobright-core,jaybird,jt400,LucidDbClient-minimal,monetdb-jdbc,postgresql,sapdbc,sqlite-jdbc,pdi-dataservice-client-plugin</includeArtifactIds>
              </configuration>
            </execution>
            <execution>
              <id>unpack-plugins</id>
              <phase>package</phase>
              <goals>
                <goal>unpack-dependencies</goal>
              </goals>
              <configuration>
                <includeArtifactIds>pentaho-big-data-plugin,pentaho-cassandra-plugin,kettle-xml-plugin,kettle-json-plugin</includeArtifactIds>
                <excludes>**/pentaho-mapreduce-libraries.zip</excludes>
                <outputDirectory>${stage.dir.designer}/plugins</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <execution>
              <id>copy-resources</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${stage.dir.designer}</outputDirectory>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/resources/resource</directory>
                  </resource>
                </resources>
              </configuration>
            </execution>
            <execution>
              <id>copy-karaf</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${stage.dir.designer}/system/karaf</outputDirectory>
                <resources>
                  <resource>
                    <directory>${stage.dir}/pentaho-karaf-assembly/</directory>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
