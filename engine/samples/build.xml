<!--===========================================================================
  This is the build file for the Pentaho BI Platform API project.
  
  This build file will use the build-res/subfloor.xml file as the default build
  process and should only override the tasks that need to differ from
  the common build file.
  
  See build-res/subfloor.xml for more details
============================================================================-->
<project name="samples" basedir="." default="default" xmlns:ivy="antlib:org.apache.ivy.ant">
	
	<description>
	  This build file is used to create the samples project
		and works with the build-res/subfloor.xml file.
	</description>

    <property file="${user.home}/.pentaho-reporting-build-settings.properties"
                description="Per user override settings-file for all pentaho-reporting projects." />

    <property name="sql.dir" value="${basedir}/sql" />

	<!-- Define the default location of the common build file -->
	<property name="common.build.file" value="./build-res/subfloor.xml" 
		description="This is the location of the standardized build-res/subfloor.xml file"/>

	<!-- Import the build-res/subfloor.xml file which contains all the default tasks -->
	<import file="${common.build.file}"/>

    <!--=======================================================================
        This project does not support test-cases, so build is same as build-testless

        Runs a typical continuous integration build including project dist,
        test, and coverage artifacts
        ====================================================================-->
    <target name="build" depends="build-testless"/>

    <!--=======================================================================
        continuous

        Runs a typical continuous integration build including project dist,
        test, and coverage artifacts
        ====================================================================-->
    <target name="continuous-local" depends="build,publish-local"/>


    <!--=======================================================================
        continuous-testless

        Runs a typical continuous integration build including project dist,
        and coverage artifacts
        ====================================================================-->
    <target name="continuous-local-testless" depends="build-testless,publish-local"/>

  <!--=======================================================================
      continuous-junit

      Runs a typical continuous integration build including project dist,
      and test artifacts
      ====================================================================-->
  <target name="continuous-local-junit" depends="build-testless,test,publish-local" />

  <!--=======================================================================
      continuous-junit

      Runs a typical continuous integration build including project dist,
      and test artifacts
      ====================================================================-->
  <target name="continuous-junit" depends="build,publish" />

  <!-- Until CM-466 is fixed, hot-patch it -->
  <target name="install-ivy" depends="subfloor.install-ivy">
    <ivy:settings url="${ivy.settingsurl}" />
  </target>

    <!--
      AS STATED ABOVE, THE ONLY TASKS THAT SHOULD EXIST IN THIS BUILD FILE ARE
      THE TASKS THAT NEED TO DIFFER FROM THE DEFAULT IMPLEMENTATION OF THE TASKS
      FOUND IN build-res/subfloor.xml.
    --> 

	<!--=======================================================================
	    clean
		    
	    Removes all the files generated from the build process.
	    ====================================================================-->
	  <target name="clean">
	  	<ant antfile="${common.build.file}" target="clean" />
	    <delete quiet="true">
	    	<fileset dir="${basedir}/WebContent/WEB-INF/lib">
	    		<include name="*.jar"/>
	    	</fileset>
	    </delete>
	  </target>

	<!--=======================================================================
          jar

          Creates a jar file from the bin directory. In this case, we want to
          include source files in the jar and also include the sql directory
          (which has the database used with the samples)
          ====================================================================-->
    <target name="jar" depends="compile,set-build.id,generate.manifest" description="Jars up the bin directory after a compile">
      <jar destfile="${dist.dir}/${ivy.artifact.id}-${project.revision}.jar" manifest="${dist.manifest.file}">
          <fileset dir="${classes.dir}" />
          <fileset dir="${src.dir}" >
              <include name="**/*.java" />
          </fileset>
          <fileset dir="${basedir}" >
              <include name="sql/*" />
              <exclude name="sql/*.log" />
          </fileset>
      </jar>
    </target>

    <!--=======================================================================
	    dist
	    
	    Creates a distribution of this project
	    ====================================================================-->
  <target name="dist" depends="jar" description="Creates a distribution">
  	<!-- Copy the libraries to the WEB=-INF/lib directory -->
  	<copy todir="${basedir}/WebContent/WEB-INF/lib">
  		<fileset dir="${lib.dir}">
  			<exclude name="servlet-api*"/>
		</fileset>
  		<fileset dir="${dist.dir}">
  			<include name="*.jar" />
  		</fileset>
  	</copy>
  	
  	<!-- Create the WAR -->
  	<war destfile="${dist.dir}/Sample4.war">
  		<fileset dir="${basedir}/WebContent"/>
  	</war>
  </target>
</project>
