
#
# Where to store cached configuration data
#
org.pentaho.reporting.engine.classic.core.ConfigStore=org.pentaho.reporting.engine.classic.core.modules.misc.configstore.filesystem.FileConfigStorage

org.pentaho.reporting.engine.classic.core.cache.DataCache=org.pentaho.reporting.engine.classic.core.cache.EhCacheDataCache
org.pentaho.reporting.engine.classic.core.cache.InMemoryCache.CachableRowLimit=10000
org.pentaho.reporting.engine.classic.core.cache.InMemoryCache.MaxEntries=50

org.pentaho.reporting.engine.classic.core.cache.EhCacheDataCache.UseGlobalCacheManager=true
org.pentaho.reporting.engine.classic.core.cache.EhCacheDataCache.CachableRowLimit=10000
org.pentaho.reporting.engine.classic.core.layout.process.EnableCountBoxesStep=false
org.pentaho.reporting.engine.classic.core.layout.process.ParanoidChecks=true
org.pentaho.reporting.engine.classic.core.metadata.StrictValidation=false

#
# Defines a stricter error handling, if set to true, then all errors that
# occur during the report processing will cause the report processing to fail.
# It is safe to set this to true, as valid reports never throw exceptions.
#
# Anyway, this defaults to false, as this the old behaviour, we don't want
# to break backward compatibility yet.
#
org.pentaho.reporting.engine.classic.core.StrictErrorHandling=true

#
# Defines whether attribute-expression evaluation errors cause the report
# processing to fail with an error. Use this to prevent errors in calculated
# fields from producing invalid reporting results.
org.pentaho.reporting.engine.classic.core.FailOnAttributeExpressionErrors=false

#
# Defines whether style-expression evaluation errors cause the report
# processing to fail with an error. Use this to prevent errors in calculated
# fields from producing invalid reporting results.
org.pentaho.reporting.engine.classic.core.FailOnStyleExpressionErrors=false

#
# Enable aliasing for Graphics2D. This may result is textlayout errors.
# If your text is not correctly aligned, disable this property.
# (Deprecated)
org.pentaho.reporting.engine.classic.core.layout.fontrenderer.UseAliasing=true

#
# This is a override setting. Some Graphics2D implementations have problems
# with the font positioning. I don't know a way to resolve that bug on the root,
# so if the bug happens to you, try setting this property to "true" to resolve
# wrong or buggy string draw results.
# (Deprecated)
org.pentaho.reporting.engine.classic.core.layout.fontrenderer.IsBuggyFRC=false

#
# The old JFreeReport way of computing line heights is not working correctly
# in some cases. Under some conditions, a character may exceed its normal
# line height (for instance if it is an upper case letter with accents).
# In that case, using the font size as line height is not working correctly,
# causing the text to be clipped.
#
# If this property is set to true, the line height is computed from the maximum
# character size for the specified font. If set to false, the line height is
# set to match the declared font size, so that the old behaviour of previous
# versions of JFreeReport is preserved.
org.pentaho.reporting.engine.classic.core.layout.fontrenderer.UseMaxCharBounds=false

#
# Defines, whether the datarow prints warning on invalid columns. Requests to
# invalid columns are non fatal, but these messages give usefull hints on invalid
# report definitions.
#
# If set to true, an additional logging entry is added whenever an invalid column
# is encountered.
org.pentaho.reporting.engine.classic.core.WarnInvalidColumns=true

#
# Defines, whether JFreeReport should query the default page format from the printerdriver.
# If there is no printer installed on Windows, this seems to block the JavaVM until a
# time out is reached.
#
# If this property is set to "true" a hard coded default is used instead.
org.pentaho.reporting.engine.classic.core.NoPrinterAvailable=true

#
# Defines that the layouter uses the System's native resolution to compute the size of images.
# This fixes problems with the HTML output, which assumes that images are rendered with a resolution
# of 96dpi.
#
# This setting defaults to true. To make use of it, the Device-Resolution configuration setting has
# to be defined as well.
org.pentaho.reporting.engine.classic.core.FixImageResolutionMapping=true

#
# Defines the user-defined output-device resolution. Images will be scaled to fit this resolution if
# the setting FixImageResolutionMapping is set to true.
org.pentaho.reporting.engine.classic.core.layout.DeviceResolution=96

#
# Defines the default font size that should be used if there is no other font-information available.
org.pentaho.reporting.engine.classic.core.layout.defaults.FontSize=12

#
# Defines the minimum font size in point to which Text-Antialiasing is applied if the Font-Smooth
# property is set to auto. This setting defaults to '8' as smaller fonts tend become unreadable with
# aliasing applied to them.
org.pentaho.reporting.engine.classic.core.layout.defaults.FontSmoothThreshold=8

#
# Defines the character encoding that is used when encoding text for URLs. This setting default to
# UTF-8 as this is the common standard.
org.pentaho.reporting.engine.classic.core.URLEncoding=UTF-8

#
# Defines, whether the stroke dashs should take the pen width into account
# or whether the stroke dashes should always be static.
#
# The static version was the default until JFreeReport 0.8.7-4 and has been
# changed to the more sensible dynamic model since that version.
org.pentaho.reporting.engine.classic.core.DynamicStrokeDashes=true

#
# Defines, that components drawn in a Component-Element or a ComponentDrawable are
# allowed to supply their own window-object as native peer. Allowing foreign peers
# can lead to very strange behaviour, ranging from unpredictable effects in the UI
# of the calling programm to even memory leaks.
org.pentaho.reporting.engine.classic.core.AllowOwnPeerForComponentDrawable=false

#
# Defines how the system processes AWT-components. Possible values are:
# 'private'      - All components get their own peer. This may result in problems on Windows.
# 'synchronized' - All components get their own peer, but all drawing operations will be executed
#                  on the AWT-EventDispatcher thread.
# 'shared'       - All components of a given report share a single AWT-peer. All drawing 
#                  operation will be executed on the AWT-EventDispatcher thread.
org.pentaho.reporting.engine.classic.core.ComponentDrawableMode=shared

#
# Defines how often the report processing thread should yield to let other processes continue. Setting
# this property to a value greater than zero enables the Yield-feature and improves the overal reponsiveness
# of the application at the cost of some performance.
#
# This property default to '100'. Set it to zero to disable yielding.
org.pentaho.reporting.engine.classic.core.YieldRate=100

# 
# Defines whether datasources should provide additional log messages. This logging can also be used to
# measure the execution time of queries. As this kind of logging can result in large amounts of data
# it is set to 'fase' as default. Set it to 'true' to enable the logging.
org.pentaho.reporting.engine.classic.core.DebugDataSources=false

#
# Defines, whether datasources should print performance related data on each query. This defaults to
# false, but can savely be set to true to get more details on the data-source performance. 
org.pentaho.reporting.engine.classic.core.ProfileDataSources=false

#
# Defines whether the reporting engine will treat elements carrying non-printable information, like
# anchor names or html-extra-raw-content as content elements. If set to true, these elements will
# compete with all other elements for space in the table.
#
# Defaults to true to solve the case where a empty element has extra content and where it would not appear
# unless that extra content is detected.
#
# Set to false to restore the PRD-3.6 behaviour. Make sure your extra-content elements generate some sort
# of output or they will not be included in the final report output.
org.pentaho.reporting.engine.classic.core.DetectExtraContent=true

#
# Defines whether image scaling in the reporting engine uses the built-in Graphics2D scaling or a
# slower but higher quality algorithm that scales images in several steps to reduce artifacts.
#
# Defaults to true as most people prefer speed over quality.
org.pentaho.reporting.engine.classic.core.UseNativeScaling=true

#
# Defines, whether the report processor should print performance related data during the report processing.
# This defaults to false, but can savely be set to true to get more details on the report performance. 
org.pentaho.reporting.engine.classic.core.ProfileReportProcessing=false
org.pentaho.reporting.engine.classic.core.performance.LogPageProgress=false
org.pentaho.reporting.engine.classic.core.performance.LogLevelProgress=false
org.pentaho.reporting.engine.classic.core.performance.LogRowProgress=false

#
# Defines, whether the reporting engine performs additional checks on its internal data-structures.
org.pentaho.reporting.engine.classic.core.layout.ParanoidChecks=true

#
# Defines how the engine behaves, if a data-factory returns null instead of throwing an exception
# if it cannot handle a query. The implementations of 0.8.9 illegally returned null and therefore
# several reports depend on the behavior that in that case an empty tablemodel is auto-generated.
#
# For now, we will warn that this is illegal behavior. In the next version, we will switch the
# property from "warn" to "fail" enforcing the correct behavior by default.
org.pentaho.reporting.engine.classic.core.states.NullDataSourceHandling=warn

#
# Defines, whether the last line will only print complete words. If set to true, the ellipse
# (the '..') will remove the last incomplete word before printing the dots. If set to false,
# the engine will print as much characters as possible without overlapping with the ellipse.
#
# Defaults to "true".
org.pentaho.reporting.engine.classic.core.LastLineBreaksOnWordBoundary=true

#
# This property defines how global * imports from subreports to their master-reports are handled.
# If the subreport contains rows with the same name as the parent, this feature will mask the parent's
# fields making them unavailable once the subreport executed.
#
# In general, there should be no need to ever enable this feature, and if you do you are on your own.
# Passing data from subreports to master reports should be done by explicit mappings carefully
# avoiding any duplicate columns.
#
# This setting defaults to "false".
org.pentaho.reporting.engine.classic.core.EnableGlobalSubReportImports=false

#
# Defines how the property-parser will handle escape sequences in parsed text. The property parser is used
# to inject named parameters in the format of ${name} or $(name) into parsed xml-text and queries in the
# datafactories. The property defaults to 'strict' to maintain a sensible level of backward compatiblity
# while causing minimal impact otherwise.
#
# Possible values are "strict", "all" or "none".
org.pentaho.reporting.engine.classic.core.util.PropertyLookupParserEscapeMode=strict

#
# This property defines if a broken image icon should be displayed for elements whose images
# are missing.
#
# This property is disabled by default to preserve full backward compatiblity.
org.pentaho.reporting.engine.classic.core.EnableBrokenImage=false

#
# A debug-helper property that enables verbose logging for any errors which happen during formula evaluations.
# Defaults to true to give maximum insight, but for production systems this should be set to false to make
# sure that evaluation errors do not slow down the report processing.
#
# Defaults to "true".
org.pentaho.reporting.engine.classic.core.function.LogFormulaFailureCause=true

#
# The default resource-bundle name used when no other value is specified as bundle name.
org.pentaho.reporting.engine.classic.core.ResourceBundle=translations

#
# A global setting on whether parameter UIs should have their Auto-Submit feature enabled by default or not.
# Possible values are "true", "false" and "prompt"
org.pentaho.reporting.engine.classic.core.ParameterAutoSubmit=prompt
org.pentaho.reporting.engine.classic.core.ParameterAutoSubmitUI=true
org.pentaho.reporting.engine.classic.core.ParameterAutoFillsSelection=false

#
# Defines the parameter layout in the UI. This can be either one of
# 'vertical' - (default) all parameter are layouted along the y-axis, 
# 'horizontal' - all parameter are layouted along the x-axis with no linebreak or
# 'flow' - all parameter are layouted along the x-axis with potential linebreaks if the end of the available
#          space  is reached.
org.pentaho.reporting.engine.classic.core.ParameterUiLayout=vertical

#
# A legacy setting to make sure that attribute-changes made by the wizard are only done
# when style changes are allowed too. In 3.7 style and attribute changes are independent
# from each other, as in many cases only one of them is desired.
#
# Defaults to "true". Set to "false" for the old behaviour.
org.pentaho.reporting.engine.classic.core.WizardAllowAttributeChangeWithoutStyleChange=true

org.pentaho.reporting.engine.classic.core.util.beans.BeanExceptionWithDetailedCause=false

#
# Defines whether subreports share their datasource per instance or per declared subreport.
org.pentaho.reporting.engine.classic.core.ReportInstancesShareConnections=true

# Legacy setting: Defines whether the report should have a automatic field named "report.name" containing
# the report's name as defined in the document metadata.
org.pentaho.reporting.engine.classic.core.legacy.ReportNameAsProperty=false

# Legacy setting: Defines whether the layouter wraps progress information into section bands.
# This exists only for strict compatibility, and setting it to false will speed up your reports.
org.pentaho.reporting.engine.classic.core.legacy.WrapProgressMarkerInSection=false
org.pentaho.reporting.engine.classic.core.legacy.StrictCompatibility=false

#
# Defines, which environment properties are published as fields in a report. The mapping is a
# environment-name to data-row column name mapping.
#
# Any environment property name that ends with "-array" will be read without the "-array" suffix
# and will be interpreted as CSV string that can be parsed into an array of strings.
org.pentaho.reporting.engine.classic.core.env-mapping.serverBaseURL=env\:\:serverBaseURL
org.pentaho.reporting.engine.classic.core.env-mapping.pentahoBaseURL=env\:\:pentahoBaseURL
org.pentaho.reporting.engine.classic.core.env-mapping.requestURL=env\:\:requestURL
org.pentaho.reporting.engine.classic.core.env-mapping.solutionRoot=env\:\:solutionRoot
org.pentaho.reporting.engine.classic.core.env-mapping.hostColonPort=env\:\:hostColonPort
org.pentaho.reporting.engine.classic.core.env-mapping.username=env\:\:username
org.pentaho.reporting.engine.classic.core.env-mapping.roles=env\:\:roles

#
# The roles-array env-key is a virtual key. This returns the roles as parsed string-array.
org.pentaho.reporting.engine.classic.core.env-mapping.roles-array=env\:\:roles-array


org.pentaho.reporting.engine.classic.core.performance.pagestates.PrimaryPoolSize=20
org.pentaho.reporting.engine.classic.core.performance.pagestates.SecondaryPoolFrequency=4
org.pentaho.reporting.engine.classic.core.performance.pagestates.SecondaryPoolSize=100
org.pentaho.reporting.engine.classic.core.performance.pagestates.TertiaryPoolFrequency=10

##################################### SYSTEM CONFIGURATION FOLLOWS ################################
###################################################################################################
# This configuration below configures the various factories of the system. Unless you are developing
# an extension for the engine and want to register it here, you should never need to even look at
# these settings. If you change anything here, evil things may happen.

org.pentaho.reporting.engine.classic.core.metadata.global-includes.core-include=res://org/pentaho/reporting/engine/classic/core/metadata/global-meta-elements.xml
org.pentaho.reporting.engine.classic.core.DataSchemaDefinition.built-in.core=res://org/pentaho/reporting/engine/classic/core/wizard/dataschema.xml


#
# Defines the known modules. It is not fatal if they are not found.
#
org.pentaho.reporting.engine.classic.core.modules.gui.common.Module=org.pentaho.reporting.engine.classic.core.modules.gui.common.GuiCommonModule
org.pentaho.reporting.engine.classic.core.modules.gui.commonswing.Module=org.pentaho.reporting.engine.classic.core.modules.gui.commonswing.SwingCommonModule
org.pentaho.reporting.engine.classic.core.modules.gui.base.Module=org.pentaho.reporting.engine.classic.core.modules.gui.base.SwingPreviewModule
org.pentaho.reporting.engine.classic.core.modules.gui.csv.Module=org.pentaho.reporting.engine.classic.core.modules.gui.csv.CSVExportGUIModule
org.pentaho.reporting.engine.classic.core.modules.gui.html.Module=org.pentaho.reporting.engine.classic.core.modules.gui.html.HtmlExportGUIModule
org.pentaho.reporting.engine.classic.core.modules.gui.pdf.Module=org.pentaho.reporting.engine.classic.core.modules.gui.pdf.PdfExportGUIModule
org.pentaho.reporting.engine.classic.core.modules.gui.plaintext.Module=org.pentaho.reporting.engine.classic.core.modules.gui.plaintext.PlainTextExportGUIModule
org.pentaho.reporting.engine.classic.core.modules.gui.print.Module=org.pentaho.reporting.engine.classic.core.modules.gui.print.AWTPrintingGUIModule
org.pentaho.reporting.engine.classic.core.modules.gui.rtf.Module=org.pentaho.reporting.engine.classic.core.modules.gui.rtf.RTFExportGUIModule
org.pentaho.reporting.engine.classic.core.modules.gui.xls.Module=org.pentaho.reporting.engine.classic.core.modules.gui.xls.ExcelExportGUIModule

#
# Base modules ..
org.pentaho.reporting.engine.classic.core.modules.base.core.Module=org.pentaho.reporting.engine.classic.core.ClassicEngineCoreModule

#
# Helper modules ..
org.pentaho.reporting.engine.classic.core.modules.misc.bsf.Module=org.pentaho.reporting.engine.classic.core.modules.misc.bsf.BSFModule
org.pentaho.reporting.engine.classic.core.modules.misc.beanshell.Module=org.pentaho.reporting.engine.classic.core.modules.misc.beanshell.BeanShellModule
org.pentaho.reporting.engine.classic.core.modules.misc.referencedoc.Module=org.pentaho.reporting.engine.classic.core.modules.misc.referencedoc.ReferenceDocModule
org.pentaho.reporting.engine.classic.core.modules.misc.tablemodel.Module=org.pentaho.reporting.engine.classic.core.modules.misc.tablemodel.TableModelModule
org.pentaho.reporting.engine.classic.core.modules.misc.datafactory.Module=org.pentaho.reporting.engine.classic.core.modules.misc.datafactory.DataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.misc.configstore.base.Module=org.pentaho.reporting.engine.classic.core.modules.misc.configstore.base.ConfigStoreBaseModule
org.pentaho.reporting.engine.classic.core.modules.misc.configstore.filesystem.Module=org.pentaho.reporting.engine.classic.core.modules.misc.configstore.filesystem.FileConfigStoreModule
org.pentaho.reporting.engine.classic.core.modules.misc.survey.Module=org.pentaho.reporting.engine.classic.core.modules.misc.survey.SurveyModule

# Output modules
org.pentaho.reporting.engine.classic.core.modules.output.csv.Module=org.pentaho.reporting.engine.classic.core.modules.output.csv.CSVModule
org.pentaho.reporting.engine.classic.core.modules.output.xml.Module=org.pentaho.reporting.engine.classic.core.modules.output.xml.XMLModule
org.pentaho.reporting.engine.classic.core.modules.output.support.itext.Module=org.pentaho.reporting.engine.classic.core.modules.output.support.itext.BaseFontModule

# pageable output modules
org.pentaho.reporting.engine.classic.core.modules.output.pageable.base.Module=org.pentaho.reporting.engine.classic.core.modules.output.pageable.base.PageableBaseModule
org.pentaho.reporting.engine.classic.core.modules.output.pageable.graphics.Module=org.pentaho.reporting.engine.classic.core.modules.output.pageable.graphics.Graphics2DPageableModule
org.pentaho.reporting.engine.classic.core.modules.output.pageable.pdf.Module=org.pentaho.reporting.engine.classic.core.modules.output.pageable.pdf.PdfPageableModule
org.pentaho.reporting.engine.classic.core.modules.output.pageable.plaintext.Module=org.pentaho.reporting.engine.classic.core.modules.output.pageable.plaintext.PlainTextPageableModule
org.pentaho.reporting.engine.classic.core.modules.output.pageable.xml.Module=org.pentaho.reporting.engine.classic.core.modules.output.pageable.xml.XmlPageableModule

# table output modules
org.pentaho.reporting.engine.classic.core.modules.output.table.base.Module=org.pentaho.reporting.engine.classic.core.modules.output.table.base.TableBaseModule
org.pentaho.reporting.engine.classic.core.modules.output.table.csv.Module=org.pentaho.reporting.engine.classic.core.modules.output.table.csv.CSVTableModule
org.pentaho.reporting.engine.classic.core.modules.output.table.html.Module=org.pentaho.reporting.engine.classic.core.modules.output.table.html.HtmlTableModule
org.pentaho.reporting.engine.classic.core.modules.output.table.rtf.Module=org.pentaho.reporting.engine.classic.core.modules.output.table.rtf.RTFTableModule
org.pentaho.reporting.engine.classic.core.modules.output.table.xls.Module=org.pentaho.reporting.engine.classic.core.modules.output.table.xls.ExcelTableModule
org.pentaho.reporting.engine.classic.core.modules.output.table.xml.Module=org.pentaho.reporting.engine.classic.core.modules.output.table.xml.XmlTableModule

#
# XML Parser modules ..
org.pentaho.reporting.engine.classic.core.modules.parser.base.Module=org.pentaho.reporting.engine.classic.core.modules.parser.base.ParserBaseModule
org.pentaho.reporting.engine.classic.core.modules.parser.ext.Module=org.pentaho.reporting.engine.classic.core.modules.parser.ext.ExtParserModule
org.pentaho.reporting.engine.classic.core.modules.parser.extwriter.Module=org.pentaho.reporting.engine.classic.core.modules.parser.extwriter.ExtWriterModule
org.pentaho.reporting.engine.classic.core.modules.parser.simple.Module=org.pentaho.reporting.engine.classic.core.modules.parser.simple.SimpleParserModule
org.pentaho.reporting.engine.classic.core.modules.parser.data.sql.Module=org.pentaho.reporting.engine.classic.core.modules.parser.data.sql.SQLDataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.parser.data.inlinedata.Module=org.pentaho.reporting.engine.classic.core.modules.parser.data.inlinedata.InlineDataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.parser.data.compounddata.Module=org.pentaho.reporting.engine.classic.core.modules.parser.data.compounddata.CompoundDataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.parser.data.staticdata.Module=org.pentaho.reporting.engine.classic.core.modules.parser.data.staticdata.StaticDataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.parser.data.external.Module=org.pentaho.reporting.engine.classic.core.modules.parser.data.external.ExternalDataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.parser.data.sequence.Module=org.pentaho.reporting.engine.classic.core.modules.parser.data.sequence.SequenceDataFactoryModule
org.pentaho.reporting.engine.classic.core.modules.parser.bundle.Module=org.pentaho.reporting.engine.classic.core.modules.parser.bundle.BundleXmlModule

org.w3c.css.sac.Parser=org.w3c.flute.parser.Parser
