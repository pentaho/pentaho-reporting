<?xml version="1.0" encoding="UTF-8"?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
           targetNamespace="http://reporting.pentaho.org/namespaces/engine/classic/bundle/layout/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:layout="http://reporting.pentaho.org/namespaces/engine/classic/bundle/layout/1.0"
           xmlns:style="http://reporting.pentaho.org/namespaces/engine/classic/bundle/style/1.0">

  <xs:element name="layout" type="layout:layoutType"/>
  <xs:element name="page-header" type="layout:pageHeaderType"/>
  <xs:element name="page-footer" type="layout:pageFooterType"/>
  <xs:element name="watermark" type="layout:watermarkType"/>
  <xs:element name="layout-processors" type="layout:layoutProcessorsType"/>

  <xs:complexType name="layoutType">
    <xs:complexContent>
      <xs:extension base="layout:elementType">
        <xs:sequence>
          <xs:element type="layout:preprocessorType" name="preprocessor">
            <xs:annotation>
              <xs:documentation>
                The preprocessor section specifies the pre-processor class that customizes the report definition
                before the report processing it started. Right now, there exists only one preprocessor, the report
                wizard, which takes the query result and produces a generic report from that.
              </xs:documentation>
            </xs:annotation>
          </xs:element>

          <xs:element type="layout:layoutProcessorsType" name="layout-processors">
            <xs:annotation>
              <xs:documentation>
                Layout-Processors are plain expressions (named or not, if unnamed, then they will be treated as
                anonymous expressions, which do not publish their results in the data-row).

                These expressions modify the report-definition at runtime to update styles or element compositions.

                In most cases, inline style- and attribute-expressions should be sufficient, but if the layout
                depends on a global state, the engine has to resort to true function implementations.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <!--
                <xs:element type="layout:pageHeaderType" name="page-header">
                  <xs:annotation>
                    <xs:documentation>
                      The band definition for page-headers. If this element is defined, it replaces any existing
                      definition from the global template.
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>

                <xs:element type="layout:watermarkType" name="watermark">
                  <xs:annotation>
                    <xs:documentation>
                      The band definition for watermarks. If this element is defined, it replaces any existing
                      definition from the global template.
                    </xs:documentation>
                  </xs:annotation>
                </xs:element>
          -->
          <xs:element type="layout:reportHeaderType" name="report-header">
            <xs:annotation>
              <xs:documentation>
                The band definition for the report header. If this element is defined, it replaces any existing
                definition from the global template.
              </xs:documentation>
            </xs:annotation>
          </xs:element>

          <xs:choice>
            <xs:element type="layout:relationalGroupType" name="group">
              <xs:annotation>
                <xs:documentation>
                  The band definition for the root group. If this element is defined, it replaces any existing
                  definition from the global template.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element type="layout:crosstabGroupType" name="crosstab">
              <xs:annotation>
                <xs:documentation>
                  The band definition for the root group. If this element is defined, it replaces any existing
                  definition from the global template.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
          </xs:choice>

          <xs:element type="layout:reportFooterType" name="report-footer">
            <xs:annotation>
              <xs:documentation>
                The band definition for the report footer. If this element is defined, it replaces any existing
                definition from the global template.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          <!--
          <xs:element type="layout:pageFooterType" name="page-footer">
            <xs:annotation>
              <xs:documentation>
                The band definition for the page footer. If this element is defined, it replaces any existing
                definition from the global template.
              </xs:documentation>
            </xs:annotation>
          </xs:element>
          -->
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="preprocessorType">
    <xs:annotation>
      <xs:documentation>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="xs:element">
        <xs:sequence>
          <xs:element name="property" type="layout:namedPropertyType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="class" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="layoutProcessorsType">
    <xs:annotation>
      <xs:documentation>
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="xs:element">
        <xs:sequence>
          <xs:element name="expression" type="layout:expressionType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
        <xs:attribute name="class" type="xs:string" use="optional"/>
        <xs:attribute name="formula" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pageHeaderType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>


  <xs:complexType name="watermarkType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="reportHeaderType">
    <xs:complexContent>
      <xs:extension base="layout:rootLevelBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabGroupType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:sequence>
          <xs:element name="group-header" type="layout:groupHeaderType" minOccurs="0" maxOccurs="1"/>
          <xs:choice>
            <xs:element name="crosstab-other-group-body" type="layout:crosstabOtherGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="crosstab-row-group-body" type="layout:crosstabRowGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
          </xs:choice>
          <xs:element name="group-footer" type="layout:groupFooterType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabOtherGroupBodyType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:choice>
          <xs:element name="crosstab-other-group" type="layout:crosstabOtherGroupType" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabOtherGroupType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:sequence>
          <xs:element name="field" type="xs:string" minOccurs="0" maxOccurs="1"/>
          <xs:element name="group-header" type="layout:groupHeaderType" minOccurs="0" maxOccurs="1"/>
          <xs:choice>
            <xs:element name="crosstab-other-group-body" type="layout:crosstabOtherGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="crosstab-row-group-body" type="layout:crosstabRowGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
          </xs:choice>
          <xs:element name="group-footer" type="layout:groupFooterType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabRowGroupBodyType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:choice>
          <xs:element name="crosstab-row-group" type="layout:crosstabRowGroupType" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabRowGroupType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:sequence>
          <xs:element name="field" type="xs:string" minOccurs="0" maxOccurs="1"/>
          <xs:element name="group-header" type="layout:groupHeaderType" minOccurs="0" maxOccurs="1"/>
          <xs:choice>
            <xs:element name="crosstab-row-group-body" type="layout:crosstabRowGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="crosstab-column-group-body" type="layout:crosstabColumnGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
          </xs:choice>
          <xs:element name="group-footer" type="layout:groupFooterType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabColumnGroupBodyType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:choice>
          <xs:element name="crosstab-column-group" type="layout:crosstabColumnGroupType" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="crosstabColumnGroupType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:sequence>
          <xs:element name="field" type="xs:string" minOccurs="0" maxOccurs="1"/>
          <xs:element name="group-header" type="layout:groupHeaderType" minOccurs="0" maxOccurs="1"/>
          <xs:choice>
            <xs:element name="crosstab-column-group-body" type="layout:crosstabColumnGroupBodyType" minOccurs="0"
                        maxOccurs="1"/>
            <xs:element name="data-body" type="layout:dataBodyType" minOccurs="0" maxOccurs="1"/>
          </xs:choice>
          <xs:element name="group-footer" type="layout:groupFooterType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="relationalGroupType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:sequence>
          <xs:element name="fields" type="layout:fieldsType" minOccurs="0" maxOccurs="1"/>
          <xs:element name="group-header" type="layout:groupHeaderType" minOccurs="0" maxOccurs="1"/>
          <xs:choice>
            <xs:element name="group-body" type="layout:groupBodyType" minOccurs="0" maxOccurs="1"/>
            <xs:element name="data-body" type="layout:dataBodyType" minOccurs="0" maxOccurs="1"/>
          </xs:choice>
          <xs:element name="group-footer" type="layout:groupFooterType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="groupBodyType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:choice>
          <xs:element name="group" type="layout:relationalGroupType" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="dataBodyType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:choice>
          <xs:element name="details" type="layout:rootLevelBandType" minOccurs="0" maxOccurs="1"/>
          <xs:element name="no-data" type="layout:rootLevelBandType" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="reportFooterType">
    <xs:complexContent>
      <xs:extension base="layout:rootLevelBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="groupFooterType">
    <xs:complexContent>
      <xs:extension base="layout:rootLevelBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="groupHeaderType">
    <xs:complexContent>
      <xs:extension base="layout:rootLevelBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="noDataBandType">
    <xs:complexContent>
      <xs:extension base="layout:rootLevelBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="detailsType">
    <xs:complexContent>
      <xs:extension base="layout:rootLevelBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="pageFooterType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="namedPropertyType">
    <xs:complexContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="class" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="expressionType">
    <xs:complexContent>
      <xs:extension base="xs:element">
        <xs:sequence>
          <xs:element type="propertiesType" name="properties" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="formula" type="xs:string" use="optional"/>
        <xs:attribute name="initial" type="xs:string" use="optional"/>
        <xs:attribute name="class" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="styleExpressionType">
    <xs:complexContent>
      <xs:extension base="expressionType">
        <xs:attribute name="style-key" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="propertiesType">
    <xs:complexContent>
      <xs:extension base="xs:element">
        <xs:sequence>
          <xs:element name="property" type="namedPropertyType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="elementType">
    <xs:annotation>
      <xs:documentation>
        The element type describes a single report element. A report element can cary style information,
        style expressions, attributes and attribute expressions and finally implicitly defines a element type
        by its namespace and tagname.

        The full list of valid elements is not defined in this schema. The concrete layout of the XML structures
        defining an element is left to the element implementation.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="xs:anyType">
        <xs:sequence>
          <xs:element ref="style:element-style"/>
          <xs:element name="style-expression" type="layout:styleExpressionType"/>
        </xs:sequence>
        <xs:anyAttribute/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="bandType">
    <xs:annotation>
      <xs:documentation>
        A band is a ordered collcetion of elements or other bands. Bands contain other elements and bands,
        but cannot contain root-bands or groups. Bands can contain sub-reports (but as of version 0.8.10,
        these subreports will not be rendered yet).
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="layout:elementType">
        <xs:sequence>
          <xs:any/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rootLevelBandType">
    <xs:complexContent>
      <xs:extension base="xs:element">
        <xs:sequence>
          <xs:element name="root-level-content" type="layout:rootLevelContentType" minOccurs="1" maxOccurs="1"/>
          <xs:element name="sub-report" type="layout:subReportType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rootBandType">
    <xs:complexContent>
      <xs:extension base="layout:elementType"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="fieldsType">
    <xs:complexContent>
      <xs:extension base="xs:element">
        <xs:sequence>
          <xs:element type="xs:string" name="field" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="rootLevelContentType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:sequence>
          <xs:any/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="subReportType">
    <xs:complexContent>
      <xs:extension base="layout:rootBandType">
        <xs:attribute name="href" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>